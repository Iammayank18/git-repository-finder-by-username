{"ast":null,"code":"var _jsxFileName = \"/Users/mayankthakur/Documents/HTML Projects/GitHub-Repo_fetcher/git-repo-fetch/src/components/Fetchrepo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Fetchrepo = () => {\n  _s();\n\n  const [repo, setRepo] = useState('');\n  con;\n\n  const submit = e => {\n    e.preventDefault();\n    const repos = fetch(`https://api.github.com/users/${repo}/repos`).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  };\n\n  useEffect(() => {\n    submit();\n  }, []);\n  let render;\n\n  if (loading) {\n    render = user.data.map((user, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 col-sm-12 col-xs-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatar,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: user.first_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: user.last_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    });\n  } else {\n    render = /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: repo,\n        onChange: e => setRepo(e.target.value),\n        placeholder: \"Github username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Fetch Repos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Fetchrepo, \"6LF51y3gLDpoAiyObiahvuV/AWY=\");\n\n_c = Fetchrepo;\nexport default Fetchrepo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetchrepo\");","map":{"version":3,"sources":["/Users/mayankthakur/Documents/HTML Projects/GitHub-Repo_fetcher/git-repo-fetch/src/components/Fetchrepo.js"],"names":["React","useState","useEffect","Fetchrepo","repo","setRepo","con","submit","e","preventDefault","repos","fetch","then","res","json","data","console","log","render","loading","user","map","index","avatar","first_name","last_name","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACAK,EAAAA,GAAG;;AAIH,QAAMC,MAAM,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAGC,KAAK,CAAE,gCAA+BP,IAAK,QAAtC,CAAL,CACXQ,IADW,CACNC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADD,EAEXF,IAFW,CAENG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAJW,CAAd;AAMD,GARD;;AAUAb,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;AAKA,MAAIW,MAAJ;;AACA,MAAIC,OAAJ,EAAa;AACXD,IAAAA,MAAM,GAAGE,IAAI,CAACL,IAAL,CAAUM,GAAV,CAAc,CAACD,IAAD,EAAOE,KAAP,KAAiB;AACtC,0BACE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACE;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEF,IAAI,CAACG,MAAf;AAAuB,cAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA,wBAA4BH,IAAI,CAACI;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0BJ,IAAI,CAACK;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAmDH,KAAnD;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdQ,CAAT;AAeD,GAhBD,MAgBO;AACLJ,IAAAA,MAAM,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACD;;AASD,sBACE;AAAA,4BAEE;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAEX,MAA1B;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AACE,QAAA,KAAK,EAAEH,IADT;AAEE,QAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACkB,MAAF,CAASC,KAAV,CAF1B;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAnED;;GAAMxB,S;;KAAAA,S;AAqEN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\n\n\nconst Fetchrepo = () => {\n\n  const [repo, setRepo] = useState('');\n  con\n\n\n\n  const submit = (e) => {\n    e.preventDefault();\n    const repos = fetch(`https://api.github.com/users/${repo}/repos`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n      });\n\n  };\n\n  useEffect(() => {\n    submit();\n  }, []);\n\n\n  let render;\n  if (loading) {\n    render = user.data.map((user, index) => {\n      return (\n        <div className=\"col-md-4 col-sm-12 col-xs-12\" key={index}>\n          <div className=\"card\">\n            <p>\n              <img src={user.avatar} alt=\"\" />\n            </p>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{user.first_name}</h5>\n              <p className=\"card-text\">{user.last_name}</p>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  } else {\n    render = <h3>Loading...</h3>;\n  }\n\n\n\n\n\n\n\n\n  return (\n    <div>\n\n      <form action=\"\" onSubmit={submit}>\n        <input type=\"text\" name=\"username\"\n          value={repo}\n          onChange={(e) => setRepo(e.target.value)}\n          placeholder=\"Github username\" />\n        <button type=\"submit\" >Fetch Repos</button>\n      </form>\n      <div>\n        {\n\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Fetchrepo;\n"]},"metadata":{},"sourceType":"module"}